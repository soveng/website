---
import philosophyQuotes from "@/data/philosophy-quotes.json";
import type { PhilosophyQuote } from "@/types";
import BigBlockQuote from "@/layouts/components/BigBlockQuote.astro";

interface Project {
  name: string;
  description: string;
  cohort: string;
  link: string;
  linkText: string;
  logo?: string;
}

interface Props {
  projects: Project[];
  showCTA?: boolean;
  ctaText?: string;
  ctaLink?: string;
  darkTheme?: boolean;
  showTitle?: boolean;
  title?: string;
  groupByCohort?: boolean;
  showHighlights?: boolean;
}

const {
  projects,
  darkTheme = false,
  showTitle = false,
  groupByCohort = true,
  showHighlights = false
} = Astro.props;

// Group projects by cohort
const projectsByCohort: Record<string, Project[]> = projects.reduce(
  (acc: Record<string, Project[]>, project: Project) => {
  if (!acc[project.cohort]) {
    acc[project.cohort] = [];
  }
  acc[project.cohort].push(project);
  return acc;
}, {});

// Sort cohorts in ascending order (SEC-01, SEC-02, SEC-03, SEC-04)
const sortedCohorts = Object.keys(projectsByCohort).sort((a, b) => {
  const numA = parseInt(a.replace('SEC-', ''));
  const numB = parseInt(b.replace('SEC-', ''));
  return numA - numB;
});

// Get highlighted projects (the ones mentioned in the homepage title)
const highlightedProjectNames = [
  "Blossom",
  "NIP-60",
  "NIP-61",
  "NIP-54",
  "npub.cash",
  "Nsite",
  "Tollgate",
  "Hypernote",
  "DVMCP",
  "ANTS",
  "Boris",
  "Spotstr",
  "BloVM"
];
const highlightedProjects = highlightedProjectNames
  .map(name => projects.find(project => project.name === name))
  .filter(Boolean) as Project[];

const containerClasses = darkTheme
  ? "w-full text-white bg-black py-8 sm:py-16 max-w-[960px] mx-auto"
  : "section bg-theme-light";

const headerClasses = darkTheme
  ? "text-2xl mb-8"
  : "text-3xl mb-8";

const titleClasses = darkTheme
  ? "text-4xl mb-8 pt-16 text-center text-white font-normal"
  : "text-4xl mb-8 text-center";

const borderClasses = darkTheme
  ? "border-white"
  : "border-border";

const descriptionClasses = darkTheme
  ? "text-gray-300"
  : "text-text";

const linkClasses = darkTheme
  ? "text-white hover:text-primary transition-colors break-all"
  : "text-primary hover:text-primary/80 transition-colors break-all font-medium";

const cohortHeaderClasses = darkTheme
  ? "text-3xl mb-6 mt-12 first:mt-0 font-normal"
  : "text-3xl mb-6 mt-12 first:mt-0";
---

<section class={containerClasses}>
  <div class="container">
    {showTitle && (
      <>
        <h1 class={titleClasses}>Demo Day Projects</h1>
        <p class={`text-center text-xl mb-12 ${darkTheme ? 'text-white' : 'text-text'}`}>
          Every Friday, participants showcase what they've built during the week.
          These are the real projects that emerged from our intensive collaboration and experimentation sessions.
        </p>
      </>
    )}
    {!showTitle && (
      <h2 class={headerClasses} style="font-size: 2rem;">Demo Day Projects</h2>
    )}

    {/* Highlights Section */}
    {showHighlights && highlightedProjects.length > 0 && (
      <div class="mb-24">
        <h2 class={cohortHeaderClasses} style="font-family: 'IM Fell Double Pica', Times, serif;">
          HIGHLIGHTS
        </h2>
        <div class="overflow-x-auto mb-8">
          <!-- Table Header - Hidden on mobile, shown on larger screens -->
          <div class={`hidden md:grid grid-cols-[3fr_1fr] gap-8 py-4 border-b ${borderClasses} text-sm font-bold tracking-wider`}>
            <div>Project Info</div>
            <div>Link</div>
          </div>

          <!-- Highlighted Project Entries -->
          {highlightedProjects.map((project: Project) => (
            <div class={`flex flex-col md:grid md:grid-cols-[3fr_1fr] gap-4 md:gap-8 py-${darkTheme ? '4' : '6'} border-b ${borderClasses}`}>
              <div class="flex items-start gap-4">
                {project.logo && (
                  <div class="flex-shrink-0">
                    <img
                      src={project.logo}
                      alt={`${project.name} logo`}
                      class="w-12 h-12 object-contain showcase-logo"
                    />
                  </div>
                )}
                <div>
                  <h4 class={`${darkTheme ? 'text-xl' : 'text-xl font-semibold'} ${darkTheme ? '' : 'mb-2'}`}>{project.name}</h4>
                  <p class={`${darkTheme ? 'my-0' : ''} ${descriptionClasses}`}>{project.description}</p>
                </div>
              </div>
              <div class="text-sm md:text-base">
                <a
                  href={project.link}
                  class={linkClasses}
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  {project.linkText}
                </a>
              </div>
            </div>
          ))}
        </div>
      </div>
    )}
    {/* Richard L. Evans Quote after highlights */}
    {showHighlights && (
      <BigBlockQuote
        quote={philosophyQuotes.find((q: PhilosophyQuote) => q.id === "richard-evans-beginning")?.quote || ""}
        author={philosophyQuotes.find((q: PhilosophyQuote) => q.id === "richard-evans-beginning")?.author || ""}
      />
    )}

    {groupByCohort ? (
      <>
        {sortedCohorts.map((cohort: string, cohortIndex: number) => (
          <>
            <div class={cohortIndex === 0 ? 'mt-16' : 'mt-32'}>
            <h2 id={cohort} class={cohortHeaderClasses} style="font-family: 'IM Fell Double Pica', Times, serif;">
              {cohort}
            </h2>
            <div class="overflow-x-auto mb-8">
                {/* Table Header - Hidden on mobile, shown on larger screens */}
                {cohortIndex === 0 && (
                  <div class={`hidden md:grid grid-cols-[3fr_1fr] gap-8 py-4 border-b ${borderClasses} text-sm font-bold tracking-wider`}>
                    <div>Project Info</div>
                    <div>Link</div>
                  </div>
                )}
                {/* Project Entries for this cohort */}
                {projectsByCohort[cohort].map((project: Project) => (
                <div
                  class={`flex flex-col md:grid md:grid-cols-[3fr_1fr] gap-4 md:gap-8 py-${darkTheme ? '4' : '6'} border-b ${borderClasses}`}
                >
                  <div class="flex items-start gap-4">
                    {project.logo && (
                      <div class="flex-shrink-0">
                        <img
                          src={project.logo}
                          alt={`${project.name} logo`}
                          class="w-12 h-12 object-contain showcase-logo"
                        />
                      </div>
                    )}
                    <div>
                      <h4 class={`${darkTheme ? 'text-xl' : 'text-xl font-semibold'} ${darkTheme ? '' : 'mb-2'}`}>{project.name}</h4>
                      <p class={`${darkTheme ? 'my-0' : ''} ${descriptionClasses}`}>{project.description}</p>
                    </div>
                  </div>
                  <div class="text-sm md:text-base">
                    <a
                      href={project.link}
                      class={linkClasses}
                      target="_blank"
                      rel="noopener noreferrer"
                    >
                      {project.linkText}
                    </a>
                  </div>
                </div>
              ))}
            </div>
          </div>
            {/* Berdyaev quote between SEC-00 and SEC-01 */}
            {cohort === 'SEC-00' && (
              <BigBlockQuote
                quote={philosophyQuotes.find((q: PhilosophyQuote) => q.id === "berdyaev-beginning-end")?.quote || ""}
                author={
                  `${philosophyQuotes.find((q: PhilosophyQuote) => q.id === "berdyaev-beginning-end")?.author || ""}, ${philosophyQuotes.find((q: PhilosophyQuote) => q.id === "berdyaev-beginning-end")?.citation || ""}`
                }
              />
            )}
            {/* Evans quote between SEC-01 and SEC-02 */}
            {cohort === 'SEC-01' && (
              <BigBlockQuote
                quote={philosophyQuotes.find((q: PhilosophyQuote) => q.id === "richard-evans-wrong-road")?.quote || ""}
                author={philosophyQuotes.find((q: PhilosophyQuote) => q.id === "richard-evans-wrong-road")?.author || ""}
              />
            )}
          </>
        ))}

        {/* SEC-05 CTA Section */}
        <div class="mt-16 text-center">
          <h2 class={cohortHeaderClasses} style="font-family: 'IM Fell Double Pica', Times, serif;">
            SEC-05
          </h2>
          <div class="py-12">
            <p class={`text-xl mb-8 ${darkTheme ? 'text-gray-300' : 'text-text'}`}>
              Your Project Here
            </p>
            <p class={`text-lg mb-8 ${darkTheme ? 'text-gray-300' : 'text-text'}`}>
              Join the next cohort and build the future you want to see.
            </p>
          </div>
        </div>
      </>
    ) : (
      <div class="overflow-x-auto mb-8">
        <!-- Table Header - Hidden on mobile, shown on larger screens -->
        <div class={`hidden md:grid grid-cols-[2fr_1fr_1fr] gap-8 py-4 border-b ${borderClasses} text-sm font-bold tracking-wider`}>
          <div>Project Info</div>
          <div>Cohort #</div>
          <div>Link</div>
        </div>

        <!-- Project Entries -->
        {projects.map((project) => (
          <div
            class={`flex flex-col md:grid md:grid-cols-[2fr_1fr_1fr] gap-4 md:gap-8 py-${darkTheme ? '4' : '6'} border-b ${borderClasses}`}
          >
            <div class="flex items-start gap-4">
              {project.logo && (
                <div class="flex-shrink-0">
                  <img
                    src={project.logo}
                    alt={`${project.name} logo`}
                    class="w-12 h-12 object-contain showcase-logo"
                  />
                </div>
              )}
              <div>
                <h4 class={`${darkTheme ? 'text-xl' : 'text-xl font-semibold'} ${darkTheme ? '' : 'mb-2'}`}>{project.name}</h4>
                <p class={`${darkTheme ? 'my-0' : ''} ${descriptionClasses}`}>{project.description}</p>
              </div>
            </div>
            <div class="text-sm md:text-base">
              <span class="md:hidden font-bold">Cohort: </span>
              {darkTheme ? (
                project.cohort
              ) : (
                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-primary text-white">
                  {project.cohort}
                </span>
              )}
            </div>
            <div class="text-sm md:text-base">
              <a
                href={project.link}
                class={linkClasses}
                target="_blank"
                rel="noopener noreferrer"
              >
                {project.linkText}
              </a>
            </div>
          </div>
        ))}
      </div>
    )}
  </div>
</section>

<style>
  .showcase-logo {
    filter: contrast(1000%) grayscale(100%);
    image-rendering: pixelated;
    image-rendering: crisp-edges;
    transition: filter 0.3s ease;
  }

  .showcase-logo:hover {
    filter: none;
  }
</style>
